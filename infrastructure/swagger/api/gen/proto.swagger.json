{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/authentication.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ClientService"
    },
    {
      "name": "SoundService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ClientService/DeleteDiarization": {
      "get": {
        "summary": "Remove diarization history",
        "operationId": "ClientService_DeleteDiarization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be deleted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/DeleteTranscription": {
      "get": {
        "summary": "Remove transcription history",
        "operationId": "ClientService_DeleteTranscription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be deleted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/DeleteTranslation": {
      "get": {
        "summary": "Remove translation history",
        "operationId": "ClientService_DeleteTranslation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be deleted.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/EditDiarization": {
      "get": {
        "summary": "Edit diarization history",
        "operationId": "ClientService_EditDiarization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be changed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "line",
            "description": "Array of corrected dialog's lines.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "speaker",
            "description": "Array of corrected speaker's names.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/EditTranscription": {
      "get": {
        "summary": "Edit transcription history",
        "operationId": "ClientService_EditTranscription",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be changed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content",
            "description": "Corrected transcription text.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/EditTranslation": {
      "get": {
        "summary": "Edit translation history",
        "operationId": "ClientService_EditTranslation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Id of the entry to be changed.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transcription",
            "description": "Corrected transcription text.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translation",
            "description": "Corrected translation text.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "editTranscription",
            "description": "Should transcription be overwritten in database.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "editTranslation",
            "description": "Should translation be overwritten in database.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/GetDiarization": {
      "get": {
        "summary": "Retrieve diarization history",
        "operationId": "ClientService_GetDiarization",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/authenticationDiarizationHistory"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of authenticationDiarizationHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "From time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "To time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "Max response count.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "description": "Filter by language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Filter by translation language (only when retrieving translation).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/GetTranscription": {
      "get": {
        "summary": "Retrieve transcription history",
        "operationId": "ClientService_GetTranscription",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/authenticationTranscriptionHistory"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of authenticationTranscriptionHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "From time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "To time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "Max response count.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "description": "Filter by language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Filter by translation language (only when retrieving translation).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/GetTranscriptionAndDiarization": {
      "get": {
        "summary": "Retrieve transcription and diarization history",
        "operationId": "ClientService_GetTranscriptionAndDiarization",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/authenticationCombined"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of authenticationCombined"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "From time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "To time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "Max response count.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "description": "Filter by language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Filter by translation language (only when retrieving translation).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/GetTranslation": {
      "get": {
        "summary": "Retrieve translation history",
        "operationId": "ClientService_GetTranslation",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/authenticationTranslationHistory"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of authenticationTranslationHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "startTime",
            "description": "From time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "description": "To time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "description": "Max response count.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "description": "Filter by language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Filter by translation language (only when retrieving translation).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/Login": {
      "get": {
        "summary": "Login into a user's account",
        "operationId": "ClientService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authenticationLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "User's chosen username.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "User's chosen password.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/RefreshToken": {
      "get": {
        "summary": "Retrieve new access and refresh token",
        "operationId": "ClientService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authenticationRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "description": "User's valid refresh token.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/Register": {
      "get": {
        "summary": "Create a new account",
        "operationId": "ClientService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "description": "User's chosen username.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "User's chosen password.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/ClientService/SaveOnlyTranslation": {
      "get": {
        "summary": "Save text's translation",
        "operationId": "ClientService_SaveOnlyTranslation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "transcriptionId",
            "description": "Translation's id.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "content",
            "description": "Translation's text.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "description": "Translation's language.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClientService"
        ]
      }
    },
    "/SoundService/DiarizateFile": {
      "get": {
        "summary": "Send an audio file for transcription with audio diarization",
        "operationId": "SoundService_DiarizateFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sound_transferSpeakerAndLineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "soundData",
            "description": "Selected file's raw bytes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "sourceLanguage",
            "description": "Selected file's language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "description": "Selected file's title.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TestConnection": {
      "get": {
        "summary": "Test connection to the gRPC server",
        "operationId": "SoundService_TestConnection",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sound_transferTextMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "text",
            "description": "Random seed.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TranscribeFile": {
      "get": {
        "summary": "Send an audio file for transcription",
        "operationId": "SoundService_TranscribeFile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sound_transferSoundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "soundData",
            "description": "Selected file's raw bytes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "sourceLanguage",
            "description": "Selected file's language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "description": "Selected file's title.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TranscribeLive": {
      "get": {
        "summary": "Stream audio chunks for live transcription",
        "operationId": "SoundService_TranscribeLive",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/sound_transferSoundStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of sound_transferSoundStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "soundData",
            "description": "Selected file's raw bytes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TranscribeLiveWeb": {
      "get": {
        "summary": "Live transcription without streaming (for grpc-web library)",
        "operationId": "SoundService_TranscribeLiveWeb",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sound_transferSoundStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "soundData",
            "description": "Selected file's raw bytes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "sourceLanguage",
            "description": "Selected file's language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "description": "Selected file's title.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TranslateFile": {
      "get": {
        "summary": "Send an audio file for translation",
        "operationId": "SoundService_TranslateFile",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/sound_transferSoundResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of sound_transferSoundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "soundData",
            "description": "Selected file's raw bytes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "sourceLanguage",
            "description": "Selected file's language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Desired translation language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "description": "Selected file's title.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    },
    "/SoundService/TranslateText": {
      "get": {
        "summary": "Send a text for translation",
        "operationId": "SoundService_TranslateText",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sound_transferTextMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "text",
            "description": "Text to be translated.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "textLanguage",
            "description": "Original text's language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translationLanguage",
            "description": "Desired translation language.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SoundService"
        ]
      }
    }
  },
  "definitions": {
    "authenticationCombined": {
      "type": "object",
      "properties": {
        "diarization": {
          "$ref": "#/definitions/authenticationDiarizationHistory",
          "title": "User's diarization history"
        },
        "transcription": {
          "$ref": "#/definitions/authenticationTranscriptionHistory",
          "title": "User's transcription history"
        }
      },
      "title": "authentication.Combined"
    },
    "authenticationDiarizationHistory": {
      "type": "object",
      "properties": {
        "diarizationId": {
          "type": "integer",
          "format": "int32",
          "title": "Diarization's id"
        },
        "speaker": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Diarization's speakers in order"
        },
        "line": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Diarization's text lines in order"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Diarization's creation time"
        },
        "language": {
          "type": "string",
          "title": "Diarization's language"
        },
        "title": {
          "type": "string",
          "title": "Diarization's title"
        }
      },
      "title": "authentication.DiarizationHistory"
    },
    "authenticationLoginResponse": {
      "type": "object",
      "properties": {
        "JWT": {
          "type": "string",
          "title": "Retrieved JWT token"
        },
        "refreshToken": {
          "type": "string",
          "title": "Retrieved refresh token"
        }
      },
      "title": "authentication.LoginResponse"
    },
    "authenticationRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "title": "Retrieved refresh token"
        },
        "accessToken": {
          "type": "string",
          "title": "Retrieved JWT token"
        }
      },
      "title": "authentication.RefreshTokenResponse"
    },
    "authenticationTranscriptionHistory": {
      "type": "object",
      "properties": {
        "transcription": {
          "type": "string",
          "title": "Transcription's text"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Transcription's creation time"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Transcription's id"
        },
        "language": {
          "type": "string",
          "title": "Transcription's language"
        },
        "title": {
          "type": "string",
          "title": "Transcription's title"
        }
      },
      "title": "authentication.TranscriptionHistory"
    },
    "authenticationTranslationHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Translation's id"
        },
        "transcription": {
          "type": "string",
          "title": "Translation's original language text"
        },
        "translation": {
          "type": "string",
          "title": "Translation's text"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Translation's creation time"
        },
        "transcriptionLangauge": {
          "type": "string",
          "title": "Translation's original language"
        },
        "translationLangauge": {
          "type": "string",
          "title": "Translation's language"
        },
        "title": {
          "type": "string",
          "title": "Translation's title"
        }
      },
      "title": "authentication.TranslationHistory"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "sound_transferSoundResponse": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "Transcription of the audio file"
        },
        "detectedLanguage": {
          "type": "string",
          "title": "Detected language by speech-to-text model"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Id of the transcription"
        }
      },
      "title": "sound_service.SoundResponse"
    },
    "sound_transferSoundStreamResponse": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "Transcription of the audio file"
        },
        "newChunk": {
          "type": "boolean",
          "title": "Informs whether server treated provided segment as new batch"
        }
      },
      "title": "sound_service.SoundStreamResponse"
    },
    "sound_transferSpeakerAndLineResponse": {
      "type": "object",
      "properties": {
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Array of transcriptions of the audio file, order preserved"
        },
        "speakerName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Array of recognised speakers in the audio file, order preserved"
        },
        "detectedLanguage": {
          "type": "string",
          "title": "Detected language by speech-to-text model"
        }
      },
      "title": "sound_service.SpeakerAndLineResponse"
    },
    "sound_transferTextMessage": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "title": "Random seed"
        }
      },
      "title": "sound_service.TextMessage"
    }
  }
}
